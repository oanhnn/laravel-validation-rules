name: CI

on: [push, pull_request]

jobs:
  # check-sercurity:
  #   name: '[PHP] Check security'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setting up PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: 7.4
  #         extensions: curl, json
  #         tools: symfony
  #     - name: Run check security
  #       run: symfony security:check

  check-coding-style:
    name: '[PHP] Check coding style'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setting up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          tools: phpcs
      - name: Check coding style
        run: phpcs --standard=phpcs.xml.dist

  run-tests:
    name: '[PHP] Test with PHP${{ matrix.php }}, Laravel v${{ matrix.LARAVEL }} and ${{ matrix.dependencies }} dependencies'
    strategy:
      matrix:
        php:
          - 7.2
          - 7.3
          - 7.4
        LARAVEL:
          - 6.*
          - 7.*
          - 8.*
        dependencies:
          - highest
          - lowest
        exclude:
          - php: 7.2
            LARAVEL: 8.*

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: curl, json, mbstring
          key: cache-v1 # can be any string, change to clear the extension cache.

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-extensions.outputs.dir }}
          key: ${{ steps.cache-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: curl, json, mbstring
          coverage: xdebug
          tools: composer

      - name: Setup cache dependencies
        id: cache-composer
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-composer.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          key: ${{ runner.os }}-php-${{ matrix.php }}-L${{ matrix.LARAVEL }}-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-php-${{ matrix.php }}-L${{ matrix.LARAVEL }}-${{ matrix.dependencies }}-

      - name: Install lowest dependencies with composer
        run: |
          composer require --no-interaction --no-update "illuminate/support:${{ matrix.LARAVEL }}"
          composer update  --no-interaction --no-progress --no-suggest --prefer-lowest
        if: matrix.dependencies == 'lowest'

      - name: Install highest dependencies with composer
        run: |
          composer require --no-interaction --no-update "illuminate/support:${{ matrix.LARAVEL }}"
          composer update  --no-interaction --no-progress --no-suggest
        if: matrix.dependencies == 'highest'

      - name: Run PHPUnit
        run: php vendor/bin/phpunit --verbose --stderr --coverage-text --coverage-clover=build/logs/clover.xml

      - name: Upload coverage results to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: php-${{ matrix.php }}-L${{ matrix.LARAVEL }}
        run: |
          composer global require php-coveralls/php-coveralls
          php-coveralls --coverage_clover=build/logs/clover.xml -vvv
        if: matrix.dependencies == 'highest'

  coveralls-finish:
    needs: [run-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
